# Generated by Django 5.1.4 on 2025-07-13 14:59

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('store', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email address for contact/receipts', max_length=254)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='store.store')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_profiles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(choices=[('shipping', 'Shipping Address'), ('billing', 'Billing Address')], help_text='Type of address (shipping/billing)', max_length=10)),
                ('is_default', models.BooleanField(default=False, help_text='Set as default address of this type')),
                ('first_name', models.CharField(help_text='Recipient first name', max_length=150)),
                ('last_name', models.CharField(help_text='Recipient last name', max_length=150)),
                ('company', models.CharField(blank=True, help_text='Company name (optional)', max_length=255)),
                ('street_address_1', models.CharField(help_text='Street address, line 1', max_length=255)),
                ('street_address_2', models.CharField(blank=True, help_text='Street address, line 2 (optional)', max_length=255)),
                ('city', models.CharField(help_text='City', max_length=100)),
                ('state', models.CharField(help_text='State/Province/Region', max_length=100)),
                ('postal_code', models.CharField(help_text='ZIP/Postal code', max_length=20)),
                ('country', models.CharField(choices=[('US', 'United States'), ('CA', 'Canada'), ('GB', 'United Kingdom'), ('AU', 'Australia'), ('BD', 'Bangladesh')], default='BD', help_text='Country', max_length=2)),
                ('phone', models.CharField(blank=True, help_text='Contact phone number (optional)', max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(help_text='The customer this address belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='customer.customer')),
            ],
            options={
                'verbose_name_plural': 'Addresses',
                'ordering': ['-is_default', '-updated_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='customer',
            constraint=models.UniqueConstraint(condition=models.Q(('user__isnull', False)), fields=('store', 'user'), name='unique_store_user_customer'),
        ),
        migrations.AddConstraint(
            model_name='customer',
            constraint=models.UniqueConstraint(condition=models.Q(('user__isnull', True)), fields=('store', 'email'), name='unique_store_guest_email'),
        ),
        migrations.AddConstraint(
            model_name='address',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('customer', 'address_type', 'is_default'), name='unique_default_address_per_type'),
        ),
    ]
